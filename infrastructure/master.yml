Description: >

  This template deploys dev/stage/prod/management VPCs, with a pair of public and private subnets spread
  across two Availabilty Zones in each VPC. For a VPC, it deploys an Internet Gateway, with a default
  route on the public subnets. It deploys a pair of NAT instances (one in each AZ),
  and default routes for them in the private subnets.

  It also deploys a Jenkins instance used for building CI/CD pipelines.

Parameters:
  VpcTemplateUrl:
    Type: String
    Description: Url for vpc template stored in s3 bucket
  VpcPeeringTemplateUrl:
    Type: String
    Description: VPC peering template stored in s3 bucket
  BastionTemplateUrl:
    Type: String
    Description: Url for vpc template stored in s3 bucket
  BastionKeyName:
    Type: String
    Description: Bastion ssh key name
    Default: BastionKey
  RdsTemplateUrl:
    Type: String
    Description: Url for rds template stored in s3 bucket
  DatabaseName:
    Type: String
    Description: Database name
  DBMasterUsername:
    Type: String
    Description: DB master user name
#  JenkinsTemplateUrl:
#    Type: String
#    Description: Jenkins template stored in s3 bucket
#  JenkinsUser:
#    Type: String
#    Description: Jenkins user name
#    Default: jenkins
  DefaultSSHKey:
    Type: String
    Description: Default ssh key name
#  GitRepo:
#    Type: String
#    Description: git repo
#  GitBranch:
#    Type: String
#    Description: default branch to use
#    Default: master
#  EtlResourcesTemplateUrl:
#    Type: String
#    Description: Url for etl resources template stored in s3 bucket
#  WebAppResourcesTemplateUrl:
#    Type: String
#    Description: Url for webapp template stored in s3 bucket
#  SamTemplateUrl:
#    Type: String
#    Description: Url for serverless application model template stored in s3 bucket
#  SagemakerResourcesTemplateUrl:
#    Type: String
#    Description: Url for Sagemaker resources template stored in s3 bucket
  # GitUserName:
  #   Type: String
  #   Description: default service account user name for interacting with git repo
Resources:

  # VPC nested stacks
  ManagementVPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref VpcTemplateUrl
      Parameters:
        EnvironmentName: management
  DevVPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref VpcTemplateUrl
      Parameters:
        EnvironmentName: dev
  StageVPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref VpcTemplateUrl
      Parameters:
        EnvironmentName: stage
  ProdVPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref VpcTemplateUrl
      Parameters:
        EnvironmentName: prod

  # VPC Peering nested stacks
  ManagementToDevVPCPeering:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref VpcPeeringTemplateUrl
      Parameters:
        VPC: !GetAtt ManagementVPC.Outputs.VPC
        VPCEnvironmentName: management
        VPCCidrBlock: !GetAtt ManagementVPC.Outputs.VPCCIDR
        VPCPublicRouteTable: !GetAtt ManagementVPC.Outputs.PublicRouteTable
        VPCPrivateRouteTable1: !GetAtt ManagementVPC.Outputs.PrivateRouteTable1
        VPCPrivateRouteTable2: !GetAtt ManagementVPC.Outputs.PrivateRouteTable2
        PeeredVPC: !GetAtt DevVPC.Outputs.VPC
        PeeredVPCEnvironmentName: dev
        PeeredVPCCidrBlock: !GetAtt DevVPC.Outputs.VPCCIDR
        PeeredVPCPublicRouteTable: !GetAtt DevVPC.Outputs.PublicRouteTable
        PeeredVPCPrivateRouteTable1: !GetAtt DevVPC.Outputs.PrivateRouteTable1
        PeeredVPCPrivateRouteTable2: !GetAtt DevVPC.Outputs.PrivateRouteTable2
  ManagementToStageVPCPeering:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref VpcPeeringTemplateUrl
      Parameters:
        VPC: !GetAtt ManagementVPC.Outputs.VPC
        VPCEnvironmentName: management
        VPCCidrBlock: !GetAtt ManagementVPC.Outputs.VPCCIDR
        VPCPublicRouteTable: !GetAtt ManagementVPC.Outputs.PublicRouteTable
        VPCPrivateRouteTable1: !GetAtt ManagementVPC.Outputs.PrivateRouteTable1
        VPCPrivateRouteTable2: !GetAtt ManagementVPC.Outputs.PrivateRouteTable2
        PeeredVPC: !GetAtt StageVPC.Outputs.VPC
        PeeredVPCEnvironmentName: stage
        PeeredVPCCidrBlock: !GetAtt StageVPC.Outputs.VPCCIDR
        PeeredVPCPublicRouteTable: !GetAtt StageVPC.Outputs.PublicRouteTable
        PeeredVPCPrivateRouteTable1: !GetAtt StageVPC.Outputs.PrivateRouteTable1
        PeeredVPCPrivateRouteTable2: !GetAtt StageVPC.Outputs.PrivateRouteTable2
  ManagementToProdVPCPeering:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref VpcPeeringTemplateUrl
      Parameters:
        VPC: !GetAtt ManagementVPC.Outputs.VPC
        VPCEnvironmentName: management
        VPCCidrBlock: !GetAtt ManagementVPC.Outputs.VPCCIDR
        VPCPublicRouteTable: !GetAtt ManagementVPC.Outputs.PublicRouteTable
        VPCPrivateRouteTable1: !GetAtt ManagementVPC.Outputs.PrivateRouteTable1
        VPCPrivateRouteTable2: !GetAtt ManagementVPC.Outputs.PrivateRouteTable2
        PeeredVPC: !GetAtt ProdVPC.Outputs.VPC
        PeeredVPCEnvironmentName: prod
        PeeredVPCCidrBlock: !GetAtt ProdVPC.Outputs.VPCCIDR
        PeeredVPCPublicRouteTable: !GetAtt ProdVPC.Outputs.PublicRouteTable
        PeeredVPCPrivateRouteTable1: !GetAtt ProdVPC.Outputs.PrivateRouteTable1
        PeeredVPCPrivateRouteTable2: !GetAtt ProdVPC.Outputs.PrivateRouteTable2

  # Bastion host nested stack
  Bastion:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref BastionTemplateUrl
      Parameters:
        EnvironmentName: management
        VpcId: !GetAtt ManagementVPC.Outputs.VPC
        InstanceSubnet: !GetAtt ManagementVPC.Outputs.PublicSubnet1
        BastionKeyName: !Ref BastionKeyName

  # Jenkins instance nested stack
#  Jenkins:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Ref JenkinsTemplateUrl
#      Parameters:
#        EnvironmentName: management
#        KeyName: !Ref DefaultSSHKey
#        VpcId: !GetAtt ManagementVPC.Outputs.VPC
#        LBSubnets: !GetAtt ManagementVPC.Outputs.PublicSubnets
#        #InstanceSubnet: !GetAtt ManagementVPC.Outputs.PublicSubnet1
#        InstanceSubnet: !GetAtt ManagementVPC.Outputs.PrivateSubnet1
#        JenkinsUser: !Ref JenkinsUser
#        JenkinsCookbookRepo: !Ref GitRepo
#        GitBranch: !Ref GitBranch
#        GitRepo: !Ref GitRepo

  # RDS nested stacks
  DevRDS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref RdsTemplateUrl
      Parameters:
        EnvironmentName: dev
        DatabaseName: !Ref DatabaseName
        MasterUsername: !Ref DBMasterUsername
        MasterUserPasswordSecretName: 'dev/RdsPassword'
        VpcId: !GetAtt DevVPC.Outputs.VPC
        Subnets: !GetAtt DevVPC.Outputs.PrivateSubnets
        PubliclyAccessible: false
  StageRDS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref RdsTemplateUrl
      Parameters:
        EnvironmentName: stage
        DatabaseName: !Ref DatabaseName
        MasterUsername: !Ref DBMasterUsername
        MasterUserPasswordSecretName: 'stage/RdsPassword'
        VpcId: !GetAtt StageVPC.Outputs.VPC
        Subnets: !GetAtt StageVPC.Outputs.PrivateSubnets
        PubliclyAccessible: false
  ProdRDS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref RdsTemplateUrl
      Parameters:
        EnvironmentName: prod
        DatabaseName: !Ref DatabaseName
        MasterUsername: !Ref DBMasterUsername
        MasterUserPasswordSecretName: 'prod/RdsPassword'
        VpcId: !GetAtt ProdVPC.Outputs.VPC
        Subnets: !GetAtt ProdVPC.Outputs.PrivateSubnets
        PubliclyAccessible: false

  # ETL Resources nested stacks
#  DevEtlResources:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Ref EtlResourcesTemplateUrl
#      Parameters:
#        EnvironmentName: dev
#  StageEtlResources:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Ref EtlResourcesTemplateUrl
#      Parameters:
#        EnvironmentName: stage
#  ProdEtlResources:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Ref EtlResourcesTemplateUrl
#      Parameters:
#        EnvironmentName: prod

  # Static Website nested stack
#  DevWebStaticHosting:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Ref WebAppResourcesTemplateUrl
#      Parameters:
#        Environment: dev
#  StageWebStaticHosting:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Ref WebAppResourcesTemplateUrl
#      Parameters:
#        Environment: stage
#  ProdWebStaticHosting:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Ref WebAppResourcesTemplateUrl
#      Parameters:
#        Environment: prod

  # Serverless application nested stack
#  DevSAM:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Ref SamTemplateUrl
#      Parameters:
#        Environment: dev
#        VpcId: !GetAtt DevVPC.Outputs.VPC
#        VpcCidrBlock: !GetAtt DevVPC.Outputs.VPCCIDR
#  StageSAM:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Ref SamTemplateUrl
#      Parameters:
#        Environment: stage
#        VpcId: !GetAtt StageVPC.Outputs.VPC
#        VpcCidrBlock: !GetAtt StageVPC.Outputs.VPCCIDR
#  ProdSAM:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Ref SamTemplateUrl
#      Parameters:
#        Environment: prod
#        VpcId: !GetAtt ProdVPC.Outputs.VPC
#        VpcCidrBlock: !GetAtt ProdVPC.Outputs.VPCCIDR

  # Stagemaker nested stacks
#  DevSagemakerResources:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Ref SagemakerResourcesTemplateUrl
#      Parameters:
#        EnvironmentName: dev
#        VpcId: !GetAtt DevVPC.Outputs.VPC
#  StageSagemakerResources:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Ref SagemakerResourcesTemplateUrl
#      Parameters:
#        EnvironmentName: stage
#        VpcId: !GetAtt StageVPC.Outputs.VPC
#  ProdSagemakerResources:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: !Ref SagemakerResourcesTemplateUrl
#      Parameters:
#        EnvironmentName: prod
#        VpcId: !GetAtt ProdVPC.Outputs.VPC

Outputs:
#  devEtlBucketName:
#    Description: Name of the created bucket
#    Value: !GetAtt DevEtlResources.Outputs.EtlBucketName
#  stageEtlBucketName:
#    Description: Name of the created bucket
#    Value: !GetAtt StageEtlResources.Outputs.EtlBucketName
#  prodEtlBucketName:
#    Description: Name of the created bucket
#    Value: !GetAtt ProdEtlResources.Outputs.EtlBucketName
#  devSagemakerBucketName:
#    Description: Name of the created bucket
#    Value: !GetAtt DevSagemakerResources.Outputs.SagemakerBucketName
#  stageSagemakerBucketName:
#    Description: Name of the created bucket
#    Value: !GetAtt StageSagemakerResources.Outputs.SagemakerBucketName
#  prodSagemakerBucketName:
#    Description: Name of the created bucket
#    Value: !GetAtt ProdSagemakerResources.Outputs.SagemakerBucketName
  devPrivateSubnet1:
    Description: dev private subnet 1
    Value: !GetAtt DevVPC.Outputs.PrivateSubnet1
  devPrivateSubnet1:
    Description: dev private subnet 2
    Value: !GetAtt DevVPC.Outputs.PrivateSubnet2
  devPublicSubnet1:
    Description: dev public subnet 1
    Value: !GetAtt DevVPC.Outputs.PublicSubnet1
  devPublicSubnet2:
    Description: dev public subnet 2
    Value: !GetAtt DevVPC.Outputs.PublicSubnet2
  devPrivateSubnets:
    Description: dev public subnets
    Value: !GetAtt DevVPC.Outputs.PrivateSubnets
  devPublicSubnets:
    Description: dev public subnets
    Value: !GetAtt DevVPC.Outputs.PublicSubnets
#  devSageMakerSecurityGroupId:
#    Description: dev sagemaker security group id
#    Value: !GetAtt DevSagemakerResources.Outputs.SageMakerSecurityGroupId
  devRdsHost:
    Description: dev RDS host
    Value: !GetAtt DevRDS.Outputs.Host
  stagePrivateSubnet1:
    Description: stage private subnet 1
    Value: !GetAtt StageVPC.Outputs.PrivateSubnet1
  stagePrivateSubnet1:
    Description: stage private subnet 2
    Value: !GetAtt StageVPC.Outputs.PrivateSubnet2
  stagePublicSubnet1:
    Description: stage public subnet 1
    Value: !GetAtt StageVPC.Outputs.PublicSubnet1
  stagePublicSubnet2:
    Description: stage public subnet 2
    Value: !GetAtt StageVPC.Outputs.PublicSubnet2
  stagePrivateSubnets:
    Description: stage public subnets
    Value: !GetAtt StageVPC.Outputs.PrivateSubnets
  stagePublicSubnets:
    Description: stage public subnets
    Value: !GetAtt StageVPC.Outputs.PublicSubnets
#  stageSageMakerSecurityGroupId:
#    Description: stage sagemaker security group id
#    Value: !GetAtt StageSagemakerResources.Outputs.SageMakerSecurityGroupId
  stageRdsHost:
    Description: stage RDS host
    Value: !GetAtt StageRDS.Outputs.Host
  prodPrivateSubnet1:
    Description: prod private subnet 1
    Value: !GetAtt ProdVPC.Outputs.PrivateSubnet1
  prodPrivateSubnet1:
    Description: prod private subnet 2
    Value: !GetAtt ProdVPC.Outputs.PrivateSubnet2
  prodPublicSubnet1:
    Description: prod public subnet 1
    Value: !GetAtt ProdVPC.Outputs.PublicSubnet1
  prodPublicSubnet2:
    Description: prod public subnet 2
    Value: !GetAtt ProdVPC.Outputs.PublicSubnet2
  prodPrivateSubnets:
    Description: prod public subnets
    Value: !GetAtt ProdVPC.Outputs.PrivateSubnets
  prodPublicSubnets:
    Description: prod public subnets
    Value: !GetAtt ProdVPC.Outputs.PublicSubnets
#  prodSageMakerSecurityGroupId:
#    Description: prod sagemaker security group id
#    Value: !GetAtt ProdSagemakerResources.Outputs.SageMakerSecurityGroupId
  prodRdsHost:
    Description: prod RDS host
    Value: !GetAtt ProdRDS.Outputs.Host
#  BuildArtifactsBucket:
#    Description: build artifact bucket
#    Value: !GetAtt Jenkins.Outputs.BuildArtifactsBucket
#  JenkinsUrl:
#    Description: build artifact bucket
#    Value: !GetAtt Jenkins.Outputs.JenkinsUrl


  # EcsListenerArn:
  #   Description: ECS ALB listener ARN
  #   Value: !GetAtt ALB.Outputs.Listener
