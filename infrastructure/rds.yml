---
AWSTemplateFormatVersion: 2010-09-09

Description: Postgresql multi-az Rds

Parameters:
  EnvironmentName:
    Type: String
    AllowedValues:
      - prod
      - test
      - dev
  DatabaseName:
    Type: String
  MasterUsername:
    Type: String
    Default: root
  MasterUserPasswordSecretName:
    Type: String
    #NoEcho: true
  VpcId:
    Type: AWS::EC2::VPC::Id
  Subnets:
    Description: Choose which subnets the cluster should be deployed
    Type: List<AWS::EC2::Subnet::Id>
  MultiAZDeployment:
    Description: Deploy in multi az
    Type: String
    Default: true
  StorageInGb:
    Type: Number
    Description: The allocated storage size in GB
    MinValue: 100
    MaxValue: 1000
    ConstraintDescription: Must be a number between 200 and 1000
    Default: 200
  PostgresVersion:
    Type: String
    Description: Postgres version
    AllowedValues: ['10.3', '10.1', '9.6.8', '9.6.6']
    ConstraintDescription: Must be a one of the available Postgres versions
    Default: '9.6.8'
  DbInstanceType:
    Type: String
    Description: Database instance types
    AllowedValues: [
      db.t2.micro, db.t2.small, db.t2.medium, db.t2.large, db.t2.xlarge, db.t2.2xlarge,
      db.m4.large, db.m4.xlarge, db.m4.2xlarge, db.m4.4xlarge, db.m4.10xlarge, db.m4.16xlarge,
      db.r3.large, db.r3.xlarge, db.r3.2xlarge, db.r3.4xlarge, db.r3.8xlarge,
      db.r4.large, db.r4.xlarge, db.r4.2xlarge, db.r4.4xlarge, db.r4.8xlarge, db.r4.16xlarge
    ]
    ConstraintDescription: Must be one of the available database instance types
    Default: 'db.m4.large'
  BackupRetentionInDays:
    Type: Number
    Description: Backup retention (in days)
    Default: 7
  PubliclyAccessible:
    Type: String
    Description: set whether the rds instance is publicly accessible
    Default: false
Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub 'SG for ${AWS::StackName}'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 5432
          ToPort: 5432
          IpProtocol: 'tcp'
  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: db subnet group for db cluster
      SubnetIds: !Ref Subnets
  Postgres:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !Ref StorageInGb
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: postgres
      EngineVersion: !Ref PostgresVersion
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref MasterUserPasswordSecretName, '}}' ]]
      DBName: !Ref DatabaseName
      DBInstanceClass: !Ref DbInstanceType
      BackupRetentionPeriod: !Ref BackupRetentionInDays
      MultiAZ: !Ref MultiAZDeployment
      VPCSecurityGroups:
        - !Ref SecurityGroup
      PubliclyAccessible: !Ref PubliclyAccessible
      DBInstanceIdentifier: !Sub ${EnvironmentName}-rds
      StorageEncrypted: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-rds
        - Key: Environment
          Value: !Ref EnvironmentName
Outputs:
  Host:
    Value: !GetAtt Postgres.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}Host'
  Name:
    Value: !Ref DatabaseName
    Export:
      Name: !Sub '${AWS::StackName}Name'
